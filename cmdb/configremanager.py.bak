#coding=utf-8
__author__ = 'Ben'
import sys
reload(sys)
sys.setdefaultencoding( "utf-8" )
from django.shortcuts import render
from django.contrib.auth import authenticate, login,logout
from django.http import HttpResponse
from django.shortcuts import render_to_response
from django.contrib.auth.decorators import login_required
from django.contrib.auth.models import User
from tools.getdir import *
from tools.ssh_run import *
from models import *
import time
import os
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger
from tools.zabbix.sum_result import *
import jenkins


currentdate=time.strftime("%Y-%m-%d", time.localtime())
config_bak_folder='/config_bak/'
#def hostinfo_index(request):
#    result=cmdb_auto_info.objects.all()
#    return render_to_response('hostinfo_index.html',{'cons':result})

def networkdy_index(request):
    contacts=cmdb_networkdy.objects.all()
    return render_to_response('networkdy_index.html', {"contacts": contacts})

def get_file_info(request):
    req=request.GET
    file_name=req['file_name']
    print "bnnnn"
    print file_name
    f=open(file_name,'rb')
    file1=f.readlines()
    f.close()
    return HttpResponse(file1)

def mkdir_fodel(title):
    path = "/mama100/jenkins/deploy/patch"
    title = "title"
    new_path = os.path.join(path, title)
    if not os.path.isdir(new_path):
        os.makedirs(new_path)
    return HttpResponse("create succsse")

def config_info_commit(request):
    req=request.POST
    print req
    file_name=req['file_name']
    file_name_new=file_name.split('/')[-1]
    print file_name
    comm='cp '+file_name+' '+config_bak_folder+file_name_new+currentdate
    os.popen(comm)
    try:
        f=open(file_name,'wb')
        context=req['filename_cont']
        f.write(context)
        f.close()
        return HttpResponse("You change file sucess!")
    except IOError:
        return HttpResponse("文件有问题")
#####编辑配置文件
def config_edit(request):
    req=request.GET
    file_name=req['file_name']
    return render_to_response('config_edit.html',{'file_name':file_name})

####删除一个配置文件
def config_delte(request):
    print "wokdo"
    req=request.GET
    file_name=req['file_name']
    soft_name=request.GET['soft_name']
    env_type=request.GET['env_type']
    viewname=request.GET['viewname']
    try:
        os.remove(file_name)
        return HttpResponse('<a href=config_info_index?soft_name='+soft_name+'&&env_type='+env_type+'&&viewname='+viewname+'>删除成功返回</a>')
    except:
        return HttpResponse('<a href=config_info_index?soft_name='+soft_name+'&&env_type='+env_type+'&&viewname='+viewname+'>删除失败返回</a>')

# def config_edit_old(request):
#     req=request.GET
#     print "#########%s#######"%req
#     soft_name=req['soft_name']
#     try:
#         base_dir='/mama100/jenkins/deploy/patch/'
#         find_dir=base_dir+soft_name
#         find_dir_list=get_dir_file(find_dir)
#         print find_dir_list
#         if find_dir_list:
#             return render_to_response('config_edit.html',{'find_dir_list':find_dir_list})
#         else:
#             return HttpResponse("没有配置文件")
#     except OSError:
#         return HttpResponse("没有此目录,请增加")

####提供ip ,文件路径，返回一个字典 eg. {filename:[ip,md5]




def config_info_index(request):
    soft_name=request.GET['soft_name']
    ###取出精确的软件名称
    jing1=soft_name.replace('prd_','')
    jing2=jing1.replace('prd-','')
    jing3=jing2.replace('pre_','')
    jing4=jing3.replace('prd-','')
    env_type=request.GET['env_type']
    viewname=request.GET['viewname']
    jenkins_url = 'http://192.168.234.17:8083/view/'+viewname
    server = jenkins.Jenkins(jenkins_url, username = 'admin', password = '20151019mama100')

    ###取IP，配置文件名，和目录
    file_object=cmdb_project.objects.get(soft_name=soft_name,ent_type=env_type)
    # print file_object
    # print type(file_object)
    iplist=file_object.nodeip.split()
    print iplist
    base_path=file_object.other2


    try:
        tmp_list=server.get_jobs()
    except:
        return HttpResponse("没有视图，请添加")

    # print "tmp_list is %s~~~"%tmp_list
    job_name_list=[]
    for i in tmp_list:
        job_name_list.append(i['fullname'])
    try:
        base_dir='/mama100/jenkins/deploy/patch/'
        find_dir=base_dir+soft_name+'/'+env_type
        # print "find:%s"%find_dir
        find_dir_list=get_dir_file(find_dir)###取出所有的配置文件名
        # print find_dir_list

        ####开始比较配置文件与各服务器的MD5值
        md5_dict={}
        for i in find_dir_list:
            temp_dict={}
            for ip in iplist:
                # print "abc;%s,%s"%(i,ip)
                password=get_password(ip)
             #   print "dddddd:%s"%password
                ####使用find 方法取出配置文件的绝对路径
                ### find /opt/applications/ -name redis.properties|grep mcs-order-rpc|grep prd|xargs md5sum
                commdjing='find /opt/applications -name '+os.path.basename(i)+'|grep '+jing4+'|xargs md5sum'
                # commdjing='find /opt/applications -name '+os.path.basename(i)+'|grep '+jing4+'|grep '+env_type+'|xargs md5sum'
                commd='md5sum '+base_path+os.path.basename(i)
                result=run_ssh(ip,'root',password,commd)
                print "reult=%s"%result
                a=result[0].split()
                try:
                    temp_dict[a[0]]=os.path.basename(a[1])######每个IP对应配置文件的MD5值做成一个字典
                except IndexError:
                    # path_tmp=os.path.dirname(i)
                    # if not os.path.exists(path_tmp):
                    print "path is error"
                    # return HttpResponse("应用部署目录有问题:"+ip+':'+base_path+os.path.basename(i))
            bendi=os.popen('md5sum '+i).readline().split()

            # print bendi[0],bendi[1]
            temp_dict[bendi[0]]=os.path.basename(bendi[1])
            print "bendi-%s"%bendi
            print "be"
            print temp_dict
            print "dnd"
            if len(temp_dict)==1:####如果字典长度为1，则所有的MD5值都相同，否则不相同
                md5_dict[i]=0####非0既假
            else:
                md5_dict[i]=1
        print md5_dict

        return render_to_response('config_info_index.html',{'find_dir_list':find_dir_list,'env_type':env_type,'soft_name':soft_name,'job_name_list':job_name_list,'viewname':viewname,'md5_dict':md5_dict})

    except OSError:
        return HttpResponse("没有此目录,请增加")








